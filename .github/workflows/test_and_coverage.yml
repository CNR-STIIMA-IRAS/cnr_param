name: 'Unit Tests and Coverage'

on:
  push:
    branches: [ master, catkin-support-revise ]
    paths-ignore:
    - 'docs/**'
    - 'README.md'
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Coverage Ubuntu 24.04
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install linux dependencies
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get update && 
            sudo apt-get install -y --fix-missing git python3-pip sudo &&
              sudo python -m pip install colcon-common-extensions &&
                sudo python -m pip install vcstool &&  
                  sudo python -m pip install rosdep
    - name: Install dependencies
      if: ${{ runner.os == 'Linux' }}
      run: sudo rosdep init && rosdep update
    - name: Install Windows dependencies
      if: ${{ runner.os == 'Windows' }}
      run: winget install Git.Git Kitware.CMake Python.Python.3.13 cURL.cURL Ninja-build.Ninja
    - name: Install Python PIP for windows
      if: ${{ runner.os == 'Windows' }}
      run: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py
    - name: Install Python modules via PIP
      if: ${{ runner.os == 'Windows' }}
      run: python -m pip install colcon vcstool rosdep
    - name: Configure
      run: cmake
            -S .
            -B build
            -D CMAKE_BUILD_TYPE=Debug
            -D RETRIVE_DEPENDENCIES=ON
            -D BUILD_AS_A_CATIKIN_PACKAGE=OFF
            -D COMPILE_ROS1_MODULE=OFF
            -D COMPILE_ROS2_MODULE=OFF
            -D COMPILE_MAPPED_FILE_MODULE=ON
            -D BUILD_UNIT_TESTS=ON
            -D BUILD_INTEGRATION_TESTS=ON
    - name: Build
      run: cmake --build build
    - name: Run tests
      working-directory: ./build
      run: ctest . --rerun-failed --output-on-failure
    - name: generate coverage
      working-directory: ./build
      run: make cov
    - name: Generate JSON coverage report
      working-directory: ./build
      run: gcovr -r .. . --branches --xml > coverage.xml
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test_results_xml
        path: ${{runner.workspace}}/build/test-results/**/*.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests # optional
        files: ${{runner.workspace}}/build/test-results/**/*.xml
        name: codecov-umbrella # optional
        fail_ci_if_error: false # optional (default = false)
        verbose: false # optional (default = false)
