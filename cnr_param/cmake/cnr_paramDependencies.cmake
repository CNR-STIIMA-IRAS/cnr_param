############################################
## It does takes inspiration from 
## Ton idea is to have a single file that can be included in the CMakeLists.txt of the package
## and in the >package>Config.cmake
## https://discourse.cmake.org/t/how-to-conditionally-call-either-find-pacakge-or-find-dependency/8175
include(CMakeFindDependencyMacro)

if(${PROJECT_NAME} STREQUAL "cnr_param")
  message(STATUS "Loading cnr_paramDependencies.cmake for the project '${PROJECT_NAME}'")
  macro(_find_package)
    find_package(${ARGN})
  endmacro()
else()
  message(STATUS "Running Project: ${PROJECT_NAME}. Loading cnr_paramDependencies.cmake from cnr_paramConfig.cmake")
  include(CMakeFindDependencyMacro)

  macro(_find_package)
    find_dependency(${ARGN})
  endmacro()
endif()

# ##########################################################################################
if(ROS2_MODULE_COMPILED)
  _find_package(catkin QUIET COMPONENTS roscpp)
elseif(ROS1_MODULE_COMPILED)
  _find_package(rclcpp REQUIRED)
  _find_package(rmw REQUIRED)
  _find_package(rosidl_runtime_c REQUIRED)
  _find_package(rcl_interfaces REQUIRED)
endif()


# ######################################################################################
# cnr_yaml
#  - cnr_yaml is installed in fodler already mapped by cmake (e.g., /usr/local)
#  - cnr_yaml is inside a catkin ws 
# #####################################################################################
_find_package(cnr_yaml QUIET)

if(NOT ${cnr_yaml_FOUND})
  if(${catkin_FOUND})
    # If it is a "catkin" workspace we have to skip the standard cmake_install_prefix, since the 
    # <>Config.cmake is generated by catkin
    _find_package(cnr_yaml REQUIRED PATHS "${CMAKE_INSTALL_PREFIX}/share/cnr_yaml/cmake_alternative" NO_DEFAULT_PATH)
  else()
    # If it is a "colcon" workspace we look at the standard cmake_install_prefix, since the 
    # <>Config.cmake is not generated by colcon if it is not asked
    _find_package(cnr_yaml QUIET PATHS "${CMAKE_INSTALL_PREFIX}/.." NO_DEFAULT_PATH)
  endif()
endif()

if(NOT ${cnr_yaml_FOUND})
  message(FATAL_ERROR "cnr_yaml not found!")
endif()

## In the case the cnr_yamlDependencies is imported from CMakeLists.txt of the 
## cnr_yaml project, the following variables are defined
## Otherwise, they are defined in the cnr_paramConfig.cmake generated in the
## install configuration steps
if(${PROJECT_NAME} STREQUAL "cnr_param")

  # Keys: DEPENDENCIES_INCLUDE_DIRS
  # ##############################################################
  # DEPENDENCIES_LIBRARIES
  # ##############################################################
  list(APPEND DEPENDENCIES_TARGETS cnr_yaml::cnr_yaml)
  list(APPEND DEPENDENCIES_INCLUDE_DIRS "${cnr_yaml_INCLUDE_DIRS}")

  if(ROS1_MODULE)
    list(APPEND DEPENDENCIES_INCLUDE_DIRS "${catkin_INCLUDE_DIRS}")
  elseif(ROS2_MODULE)
    list(APPEND DEPENDENCIES_INCLUDE_DIRS "${rclcpp_INCLUDE_DIRS}"
        "${rmw_INCLUDE_DIRS}" "${rosidl_runtime_c_INCLUDE_DIRS}"
        "${rcl_interfaces_INCLUDE_DIRS}")
  endif()

  list(
    APPEND
    DEPENDENCIES_LIBRARIES
    cnr_yaml::cnr_yaml)

  if(ROS1_MODULE)
    list(APPEND DEPENDENCIES_LIBRARIES "${catkin_LIBRARIES}")
  endif()

  if(ROS2_MODULE)
    list(APPEND DEPENDENCIES_LIBRARIES "${rclcpp_LIBRARIES}")
  endif()
endif()